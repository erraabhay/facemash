<div class="rankings-container">
    <h2>Current Rankings</h2>

    {{#if message}}
    <div class="success-message">{{message}}</div>
    {{/if}}

    {{#if error}}
    <div class="error-message">{{error}}</div>
    {{/if}}

    <div id="rankings-list" class="rankings-list">
        {{#if rankings}}
            {{#each rankings}}
            <div class="ranking-item" data-id="{{this._id}}">
                <div class="ranking-card">
                    <div class="rank-badge">#{{this.ranking}}</div>
                    <div class="img-container">
                        <img src="{{this.path}}" alt="{{this.name}}">
                    </div>
                    <div class="ranking-info">
                        <h3>{{this.name}}</h3>
                        <div class="stats">
                            <p><span class="rating">{{this.rating}}</span> ELO</p>
                            <p><span class="matches">{{this.matches}}</span> matches</p>
                        </div>
                        <div class="details-stats">
                            <p>Win Rate: <span>{{calculateWinRate this.matches this.rating}}%</span></p>
                            <p>Last Match: <span>{{formatDate this.lastMatch}}</span></p>
                        </div>
                    </div>
                </div>
            </div>
            {{/each}}
        {{else}}
            <div class="no-rankings">
                <p>No photos available for ranking yet.</p>
            </div>
        {{/if}}
    </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
const socket = io();

// Size control functionality
const MIN_SIZE = 150;
const MAX_SIZE = 400;
const STEP_SIZE = 25;
let currentSize = 200; // Default size

function updateTileSize(size) {
    const root = document.documentElement;
    root.style.setProperty('--tile-size', `${size}px`);
    root.style.setProperty('--img-height', `${size}px`);
    localStorage.setItem('tileSize', size);
    
    // Update size display
    const sizeDisplay = document.querySelector('.current-size');
    if (sizeDisplay) {
        sizeDisplay.textContent = `${size}px`;
    }
}

// Add event listeners to size control buttons
document.querySelectorAll('.size-btn').forEach(btn => {
    btn.addEventListener('click', () => {
        const action = btn.dataset.action;
        const oldSize = currentSize;
        
        if (action === 'increase' && currentSize < MAX_SIZE) {
            currentSize += STEP_SIZE;
        } else if (action === 'decrease' && currentSize > MIN_SIZE) {
            currentSize -= STEP_SIZE;
        }
        
        if (oldSize !== currentSize) {
            updateTileSize(currentSize);
        }
    });
});

// Load saved size preference on page load
document.addEventListener('DOMContentLoaded', () => {
    const savedSize = localStorage.getItem('tileSize');
    if (savedSize) {
        currentSize = parseInt(savedSize);
        updateTileSize(currentSize);
    } else {
        updateTileSize(currentSize); // Set default size
    }
});

// Socket.IO update handler
socket.on('rankingsUpdate', function(updatedRankings) {
    const rankingsList = document.getElementById('rankings-list');
    rankingsList.innerHTML = updatedRankings.map(photo => `
        <div class="ranking-item" data-id="${photo._id}">
            <div class="ranking-card">
                <div class="rank-badge">#${photo.ranking}</div>
                <div class="img-container">
                    <img src="${photo.path}" alt="${photo.name}">
                </div>
                <div class="ranking-info">
                    <h3>${photo.name}</h3>
                    <div class="stats">
                        <p><span class="rating">${photo.rating}</span> ELO</p>
                        <p><span class="matches">${photo.matches}</span> matches</p>
                    </div>
                    <div class="details-stats">
                        <p>Win Rate: <span>${calculateWinRate(photo.matches, photo.rating)}%</span></p>
                        <p>Last Match: <span>${photo.lastMatch ? new Date(photo.lastMatch).toLocaleDateString() : 'Never'}</span></p>
                    </div>
                </div>
            </div>
        </div>
    `).join('');
});

function calculateWinRate(matches, rating) {
    if (!matches) return '0';
    const baseline = 1400;
    const winRate = ((rating - baseline) / (matches * 32) + 0.5) * 100;
    return Math.round(Math.max(0, Math.min(100, winRate)));
}
</script> 